@startuml "API__procesos"

!define SHOW_PART_PROCESOS 1
!define SHOW_CONCENTRADOR 1
!define SHOW_MEDIDOR 1
!define SHOW_AUTOCONF 1
!define SHOW_PROGRAMACIONES_AMI 1
!define SHOW_COMUNCIATIONS 1

package "com.metrolink.ami_api" {

    package "com.metrolink.ami_api.config"{
        class LoggerConfigProcesos #05f7c3 {

            -static final Logger logger
            +static Logger getLogger()
        }
    }

    package "com.metrolink.ami_api.models" #85ff66{

        !if SHOW_MEDIDOR
        package "com.metrolink.ami_api.models.medidor" #fadb9d{
            class Medidores #FFFFBA {
                - vcSerie: String
                - vcidCliente: String
                - vcdescripcion: String
                + MarcasMed marcaMed
                - lisMacro: Boolean
                - vclongitudLatitud: String
                - vcfechaInstalacion: String
                + Estados estado
                + UbicacionesEnInfra ubicacionEnInfra
                - vcfechaHoraUltimaLectura: String
                - vcdíasdeRegDíariosMensuales: String
                - vcdiasdeEventos: String
                - vcperiodoIntegracion: String
                - vcultimoEstadoRele: String
                - vcfirmware: String
                + ViasObtencionDatos viaObtencionDatos
                + Concentradores concentrador
                + CanalesDeComunicacion CanalDeComunicacion
                - vcip : String
                - vcpuerto: String
                + TiposDeModuloDeCom tipoDeModuloDeCom
                + ConfiguracionProtocolo configuracionProtocolo
                + ParamAdvMed paramAdvMed
                + AgendaProgramacionesAMI enAgendaProgramacionesAMI
                - estadoEnAgenda: String
                - vcsic: String
                + CanalesPerfilCarga canalesPerfilCarga
                @Transient
                - esExistente: Boolean
            }

            class CanalesPerfilCarga #c1bbc9 {
                - nid: Long
                + CodigosObisCanal codigosObisCanal_1
                + CodigosObisCanal codigosObiscanal_2
                + CodigosObisCanal codigosObiscanal_3
            }

            class CodigosObisCanal #c1bbc9{
                - nid: Long
                - vcobis_1: String
                - vcobis_2: String
                - vcobis_3: String
                - vcobis_4: String
                - vcobis_5: String
                - vcobis_6: String
                - vcobis_7: String
                - vcobis_8: String
                - vcobis_9: String
                - vcobis_10: String
            }
        }
        !endif

        !if SHOW_CONCENTRADOR
        package "com.metrolink.ami_api.models.concentrador" #d7f7e6{
            class Concentradores #FFB3BA {
                @Id
                -vcnoSerie: String
                --
                -vcdescripcion: String
                + Marcas marcas
                + Empresas Empresas
                --
                -vccodigoCaja: String
                -vclongitudLatitud: String
                -vcfechaInstalacion: String
                --
                + Estados estado
                + CanalesDeComunicacion CanalDeComunicacion
                + ConfiguracionProtocolo configuracionProtocolo
                + ParamTiposDeComunicacion paramTiposDeComunicacion
                + ParamAdvCon paramAdvCon
            }
        }
        !endif

        !if SHOW_PROGRAMACIONES_AMI

        package "com.metrolink.ami_api.models.procesos" #a0c8fa {


            package "com.metrolink.ami_api.models.procesos.programacionesAmi" #a1c7c9{
                class ProgramacionesAMI  #ffdee8 {
                    - ncodigo : Long
                    - vcestado: String
                    + GruposMedidores grupoMedidores
                    + ListasPeticiones listaPeticiones
                    + ParametrizacionesProg parametrizacionProg
                }

                class ParametrizacionesProg {
                    - ncodigo : Long
                    - vctipoDeLectura: String
                    - vcfechaInicio: String
                    - vchoraInicio: String
                    - nreintentos: int
                    - vcdiasSemana: String
                    - vcfrecuencia: String
                }

                class ListasPeticiones  #ff6b6b {
                    - ncodigo: Long
                    - llectura_perfil_1 :  boolean
                    - leventos : boolean
                    - lregistros : boolean
                    - lfactorPotencia : boolean
                    - linstantaneos : boolean
                    - vcaccionRele: String
                    - vcfechaSincronizacion: String
                    - vchoraSincronizacion: String
                }

                class AgendaProgramacionesAMI  #e8ffde {
                    - ncodigo : Long
                    + ProgramacionesAMI ProgramacionAMI
                    + EstadosHoy estadoHoy
                }

                class EstadosHoy{
                    - ncodigo: Long
                    - lproximo: boolean
                    - vcfechaProximo: String
                    - vchoraProximo: String
                }

                class MedidoresAgenda {
                    - vcSerie: String
                    + AgendaProgramacionesAMI enAgendaProgramacionesAMI
                    - estadoEnAgenda: String
                }



            }
            !endif

            !if SHOW_AUTOCONF
            package "com.metrolink.ami_api.models.procesos.primeraLectura" #b5eaf5{
                class AutoconfMedidor #fcf0cf{
                    - vcSerie: String
                    + AutoConfCanalesPerfilCarga autoConfcanalesPerfilCarga
                    - vcfechaHoraUltimaLectura: String
                    - vcdíasdeRegDíariosMensuales: String
                    - vcdiasdeEventos: String
                    - vcperiodoIntegra: String
                    - vcultimoEstadoRe: String
                    - vcfirmware: String
                }

                class AutoConfCanalesPerfilCarga #fcf0cf{
                    + CodigosObisCanal codigosObisCanal_1
                    + CodigosObisCanal codigosObisCanal_2
                    + CodigosObisCanal codigosObisCanal_3
                }

                class AutoConfCodigosObisCanal #fcf0cf{
                    - vcobis_1: String
                    - vcobis_2: String
                    - vcobis_3: String
                    - vcobis_4: String
                    - vcobis_5: String
                    - vcobis_6: String
                    - vcobis_7: String
                    - vcobis_8: String
                    - vcobis_9: String
                    - vcobis_10: String
                }
            }
        }
        !endif
    }

    package "com.metrolink.ami_api.controllers" #4de6ff{
        !if SHOW_CONCENTRADOR
        package "com.metrolink.ami_api.controllers.concentrador" #d7f7e6{
            class ConcentradoresController #FFB3BA  {
                + ConcentradoresService concentradoresService
                * createConcentrador(concentrador: Concentrador): Concentrador
                * getAllConcentradores() : List<Concentrador>
                * getConcentradorById(id: Long) : Concentrador
                * updateConcentrador(id: Long, concentradorDetails:  Concentrador) : Concentrador
                * deleteConcentrador(id: Long) : void
            }
        }
        !endif

        !if SHOW_MEDIDOR
        package "com.metrolink.ami_api.controllers.medidor" #fadb9d{
            class MedidoresController #FFFFBA{
                + MedidoresService medidoresService
                * createMedidor(medidores: Medidores): Medidores
                * getAllMedidores() : List<Medidores>
                * getMedidorById(vcSerie: String) : Medidores
                * updateMedidor(vcSerie: String, medidorDetails:  Medidores) : Medidores
                * deleteMedidor(vcSerie: String) : void
            }
        }
        !endif

        !if SHOW_PART_PROCESOS
        package "com.metrolink.ami_api.controllers.procesos" #a0c8fa{
            package "com.metrolink.ami_api.controllers.procesos.deteccionMed" #eaebdf{
                class DeteccionMedController #cfd4fc{
                    + DeteccionMedService deteccionMedService
                    * recibirConcentrador(request: HttpServletRequest): ResponseEntity<List<Medidores>>
                }
            }

            !if SHOW_AUTOCONF
            package "com.metrolink.ami_api.controllers.procesos.autoconfiguracion"#889996{
                class AutoConfiguracionController #fcf0cf {
                    + AutoConfiguracionService autoConfiguracionService
                    * recibirConfiguracion(request: HttpServletRequest): ResponseEntity<List<AutoconfMedidor>>
                }
            }
            !endif

            !if SHOW_PROGRAMACIONES_AMI
            package "com.metrolink.ami_api.controllers.procesos.programacionesAmi" #a1c7c9 {
                class AgendaProgramacionesAMIController #efd6ff{
                    + AgendaProgramacionesAMIService agendaProgramacionesAMIService
                    + AgendaProgramacionesAMI
                    * createAgendaProgramacionesAMI(agendaProgramacionesAMI: AgendaProgramacionesAMI): AgendaProgramacionesAMI
                    * getAllAgendaProgramacionesAMI(): List<AgendaProgramacionesAMI>
                    * getAgendaProgramacionesAMIById(id: Long): AgendaProgramacionesAMI
                    * updateAgendaProgramacionesAMI(id: Long, agendaProgramacionesAMIDetails: AgendaProgramacionesAMI ): AgendaProgramacionesAMI
                    * deleteAgendaProgramacionesAMI(id: Long): Void
                }

                class ProgramacionesAMIController #e6ffd6{
                    + ProgramacionesAMIService programacionesAMIService
                    + ProgramacionesAMI
                    * createProgramacionAMI(programacionAMI: ProgramacionesAMI): ProgramacionesAMI
                    * getAllProgramacionesAMI(): List<ProgramacionesAMI>
                    * getProgramacionAMIById(id: Long): ProgramacionesAMI
                    * updateProgramacionAMI(id: Long, programacionAMIDetails: ProgramacionesAMI): ProgramacionesAMI
                    * deleteProgramacionAMI(id: Long): Void
                }
            }
            !endif
        }
        !endif
    }

    package "com.metrolink.ami_api.services" #ff5252 {
        !if SHOW_CONCENTRADOR
        package "com.metrolink.ami_api.services.concentrador" #d7f7e6 {
            class ConcentradoresService #FFB3BA {
                + ConcentradoresRepository concentradoresRepository
                * save(concentrador: Concentrador, isUpdate : boolean ): Concentrador
                * findAll() : List<Concentrador>
                * findById(id: Long) : Optional<Concentrador>
                * update(vcnoSerie: String, concentradorDetails: Concentradores  )
                * deleteById(id : Long): void
            }
        }
        !endif

        !if SHOW_MEDIDOR
        package "com.metrolink.ami_api.services.medidor" #fadb9d  {
            class MedidoresService #FFFFBA {
                + MedidoresRepository medidoresRepository
                * save(medidores: Medidores, isUpdate : boolean ): Medidores
                * findAll() : List<Medidores>
                * findById(vcSerie: String) : Optional<Medidores>
                * update(vcSerie: String, medidorDetails: Medidores)
                * deleteById(vcSerie : String): void
            }
        }
        !endif

        !if SHOW_PART_PROCESOS
        package "com.metrolink.ami_api.services.procesos" #a0c8fa{
            package "com.metrolink.ami_api.services.procesos.deteccionMed" #eaebdf{
                class DeteccionMedService #cfd4fc{
                    + ConectorDetecMedService conectorDetecMedService
                    + MedidoresService medidoresService
                    + ConcentradoresService concentradoresService
                    - static final Logger logger = LoggerConfigProcesos
                    * procesarDeteccionByCon(json: String): List<Medidores>
                }
                class ConectorDetecMedService #84f086{
                    + TcpClientDetecMedService tcpClientDetecMedService
                    + ConcentradoresService concentradoresService
                    --
                    "Metodo Provicional"
                    * ConectorDetecMedService()
                    * usarConectorDeteccion(json: String): String
                }
            }

            !if SHOW_AUTOCONF
            package "com.metrolink.ami_api.services.procesos.autoconfiguracion" #889996{
                class AutoConfiguracionService #fcf0cf {
                    + ConectorAutoConfService conectorAutoConfService
                    + MedidoresRepository medidoresRepository
                    + MedidoresService medidoresService
                    * procesarConfiguracion(rootNode: JsonNode): List<AutoconfMedidor>
                }

                class ConectorAutoConfService #84f086{
                    + MedidoresService medidoresService
                    "Metodos provicionales"
                    * procesarConfiguracion(json: String): List<AutoconfMedidor>
                    * crearAutoconfMedidor(vcSerie: String, random: Random): AutoconfMedidor
                    * crearCodigosObisCanal(random: Random): AutoConfCodigosObisCanal
                }
            }
            !endif

            !if SHOW_PROGRAMACIONES_AMI
            package "com.metrolink.ami_api.services.procesos.programacionesAmi" #a1c7c9{
                class ProgramacionesAMIService #e6ffd6{
                    + ProgramacionesAMIRepository programacionesAMIRepository
                    * save(programacionAMI: ProgramacionesAMI, isUpdate: boolean): ProgramacionesAMI
                    * findAll(): List<ProgramacionesAMI>
                    * findById(id: Long): ProgramacionesAMI
                    * update(id: Long, programacionAMIDetails: ProgramacionesAMI): ProgramacionesAMI
                    * deleteById(id: Long): Void
                }

                class AgendaProgramacionesAMIService #efd6ff {
                    + AgendaProgramacionesAMIRepository agendaProgramacionesAMIRepository
                    + AsignacionAgendaAMedidores asignacionAgendaAMedidores
                    * save(agendaProgramacionesAMI: AgendaProgramacionesAMI, isUpdate: boolean): AgendaProgramacionesAMI
                    * findAll(): List<AgendaProgramacionesAMI>
                    * findById(id: Long): AgendaProgramacionesAMI
                    * update(id: Long, agendaProgramacionesAMIDetails: AgendaProgramacionesAMI): AgendaProgramacionesAMI
                    * deleteById(id: Long): Void
                }

                class AsignacionAgendaAMedidores #efd6ff {
                    + ProgramacionesAMIService programacionesAMIService
                    + MedidoresService medidoresService
                    * verificarYProcesar(agenda: AgendaProgramacionesAMI): void
                }
            }
            !endif
        }
        !endif
    }

    !if SHOW_COMUNCIATIONS
    package "com.metrolink.ami_api.comunications" #38f571{
        package "com.metrolink.ami_api.comunications.tcp" {
            class TcpClientDetecMedService {
                * sendBytesToAddressAndPort(byte[] bytes, String address, int port): String
            }
        }
    }
    !endif

    package "com.metrolink.ami_api.repositories" #edf739{
        !if SHOW_CONCENTRADOR
        package "com.metrolink.ami_api.repositories.concentrador" #d7f7e6 {
            interface ConcentradoresRepository #FFB3BA {
            }
        }
        !endif

        !if SHOW_MEDIDOR
        package "com.metrolink.ami_api.repositories.medidor" #fadb9d {
            interface MedidoresRepository #FFFFBA {
            }
        }
        !endif

        !if SHOW_PROGRAMACIONES_AMI
        package "com.metrolink.ami_api.repositories.procesos" #a0c8fa {
            package "com.metrolink.ami_api.repositories.procesos.programacionesAmi" #a1c7c9{
                interface AgendaProgramacionesAMIRepository #efd6ff{
                }
                interface ProgramacionesAMIRepository #e6ffd6{
                }
            }
        }
        !endif
    }
}

ConcentradoresController -> ConcentradoresService : usa
ConcentradoresService --> Concentradores : usa
ConcentradoresService -> ConcentradoresRepository : usa

MedidoresController -> MedidoresService : usa
MedidoresService --> Medidores : usa
MedidoresService -> MedidoresRepository : usa

!if SHOW_PART_PROCESOS
DeteccionMedController -> DeteccionMedService : usa

DeteccionMedService -> MedidoresService : @Autowired
DeteccionMedService -> ConcentradoresService  : @Autowired
DeteccionMedService -> Medidores : usa
DeteccionMedService -> Concentradores : usa
DeteccionMedService <-> ConectorDetecMedService : @Autowired
DeteccionMedService -> LoggerConfigProcesos: usa

AutoConfiguracionController --> AutoConfiguracionService : @Autowired
AutoConfiguracionService -> MedidoresService : @Autowired
AutoConfiguracionService --> MedidoresRepository : @Autowired
AutoConfiguracionService -> CanalesPerfilCarga : usa
AutoConfiguracionService -> CodigosObisCanal : usa
AutoConfiguracionService -> Medidores : usa
AutoConfiguracionService -> AutoConfCanalesPerfilCarga : usa
AutoConfiguracionService -> AutoConfCodigosObisCanal : usa
AutoConfiguracionService -> AutoconfMedidor : usa
AutoConfiguracionService <-> ConectorAutoConfService : usa

ConectorAutoConfService -> Medidores: usa
ConectorAutoConfService -> AutoConfCanalesPerfilCarga: usa
ConectorAutoConfService -> AutoConfCodigosObisCanal: usa
ConectorAutoConfService -> AutoconfMedidor: usa
ConectorAutoConfService -> MedidoresService: @Autowired

ProgramacionesAMI --> GrupoMedidores: contiene
ProgramacionesAMI --> ListasPeticiones: contiene
ProgramacionesAMI --> ParametrizacionesProg: contiene

AgendaProgramacionesAMI -> ProgramacionesAMI: contiene
AgendaProgramacionesAMI --> EstadosHoy: contiene

Medidores --> AgendaProgramacionesAMI: contiene
Medidores -> CanalesPerfilCarga: contiene

CanalesPerfilCarga -> CodigosObisCanal: contiene
CanalesPerfilCarga -> CodigosObisCanal: contiene
CanalesPerfilCarga -> CodigosObisCanal: contiene

AutoconfMedidor -> AutoConfCanalesPerfilCarga: contiene
AutoConfCanalesPerfilCarga -> AutoConfCodigosObisCanal: contiene
AutoConfCanalesPerfilCarga -> AutoConfCodigosObisCanal: contiene
AutoConfCanalesPerfilCarga -> AutoConfCodigosObisCanal: contiene

ProgramacionesAMIController --> ProgramacionesAMIService: @Autowired
ProgramacionesAMIService --> ProgramacionesAMIRepository: @Autowired

AgendaProgramacionesAMIController --> AgendaProgramacionesAMIService: @Autowired

AgendaProgramacionesAMIService -> AsignacionAgendaAMedidores: @Autowired
AgendaProgramacionesAMIService --> AgendaProgramacionesAMIRepository: @Autowired

AsignacionAgendaAMedidores -> ProgramacionesAMIService: @Autowired
AsignacionAgendaAMedidores -> MedidoresService: @Autowired


ConectorDetecMedService --> TcpClientDetecMedService: @Autowired
!endif

@enduml
